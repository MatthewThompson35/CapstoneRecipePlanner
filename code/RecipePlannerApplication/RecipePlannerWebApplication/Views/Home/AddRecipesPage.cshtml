<style>

    #addForm,
    #addStepForm,
    #addTagForm {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);
        display: block;
        margin: 30px auto;
        max-width: 600px;
        padding: 20px;
    }

    #addForm { height: 500px; }

    #addForm input[type="text"],
    #addStepForm input[type="text"],
    #addTagForm input[type="text"],
    #addStepForm select,
    #addForm select,
    #addTagForm select {
        border: 1px solid #e6e6e6;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 18px;
        margin-bottom: 10px;
        padding: 10px;
        width: 100%;
    }

    #addForm input[type="submit"],
    #addStepForm input[type="submit"],
    #addTagForm input[type="submit"],
    #addStepForm input[type="button"],
    #addForm input[type="button"],
    #addTagForm input[type="button"] {
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }

    #addForm #cancelButton,
    #addStepForm #cancelButton,
    #addTagForm #cancelButton {
        background-color: #d9534f;
        color: #fff;
        margin-left: 10px;
    }

    #addForm label,
    #addStepForm label,
    #addTagForm label {
        display: block;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    #addForm .form-group,
    #addStepForm .form-group,
    #addTagForm .form-group { margin-bottom: 15px; }

    #addForm .button-group,
    #addStepForm .button-group,
    #addTagForm .button-group {
        margin-top: 20px;
        text-align: right;
    }

    #addRecipe {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);
        display: block;
        margin: 30px auto;
        max-width: 1200px;
        padding: 20px;
    }

    #addRecipe input[type="text"],
    #addRecipe select {
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }

    #addRecipe input[type="submit"],
    #addRecipe input[type="button"] {
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }

    #addRecipe #cancelButton {
        background-color: #d9534f;
        color: #fff;
        margin-left: 10px;
    }

    #addRecipe label {
        display: block;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    #addRecipe .form-group { margin-bottom: 15px; }

    #addRecipe .button-group {
        margin-top: 20px;
        text-align: right;
    }

    .form-container label.error { font-size: 14px; }

    #recipeName,
    #description {
        border: 1px solid #e6e6e6;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 18px;
        margin-bottom: 10px;
        padding: 10px;
        width: 100%;
    }

    #showIngredientsForm,
    #showStepForm,
    #showTagsForm,
    #cancelAddIngredient,
    #cancelAddStep,
    #cancelAddTag {
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }
    .move-button {
        margin-left: 5px;
    }

</style>

<div class="row">
    <div class="col-md-12">
        @if (ViewBag.Error != null)
        {
            <label class="error" style="color: red">@ViewBag.Error</label>
        }
        <span id="recipe-error" style="color: red;"></span>
        <div class="form-group">
            <label for="recipeName">Recipe Name:</label>
            <input type="text" name="recipeName" id="recipeName"/>
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <input type="text" name="description" id="description"/>
        </div>
        <div class="form-group">
            <h1>Ingredients</h1>
            <button id="showIngredientsForm">Add Ingredient</button>
            <form id="addForm" style="display: none;">
                <span id="ingredient-error" style="color: red;"></span>
                <div class="form-group">
                    <label for="txtIngredientName">Ingredient Name:</label>
                    <input type="text" name="txtIngredientName" id="txtIngredientName"/>
                </div>
                <div class="form-group">
                    <label for="txtQuantity">Quantity:</label>
                    <span id="quantity-error" style="color: red;"></span>
                    <input type="text" name="txtQuantity" id="txtQuantity"/>
                </div>
                <div class="form-group">
                    <label for="measurement">Measurement:</label>
                    <select name="Measurement" id="measurement">
                        @foreach (var measurement in ViewBag.measurements)
                        {
                            <option value="@measurement">@measurement</option>
                        }
                    </select>

                </div>
                <div class="button-group">
                    <button onsubmit="addIngredient()" class="btn btn-primary page-button" id="addIngredientButton">Add Ingredient</button>
                    <input type="button" value="Cancel" id="cancelAddIngredient"/>
                </div>
            </form>
            <table id="IngredientsTable" class="table">
                <thead>
                <tr>
                    <th>Ingredient Name</th>
                    <th>Quantity</th>
                    <th>Measurement</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
        <div class="form-group">
            <h1>Steps</h1>

            <button id="showStepForm">Add Step</button>
            <form id="addStepForm">
                <span id="step-error" style="color: red;"></span>
                <div class="form-group">
                    <label for="recipeName">Recipe Step:</label>
                    <input type="text" name="recipeStep" id="recipeStep"/>
                </div>
                <button onsubmit="addStep()" class="btn btn-primary page-button" id="addStepButton">Add Step</button>
                <input type="button" value="Cancel" id="cancelAddStep"/>
            </form>
            <table id="StepsTable" class="table">
                <thead>
                <tr>
                    <th>Step</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
        <div class="form-group">
            <h1>Tags</h1>
            <button id="showTagsForm">Add Tag</button>
            <form id="addTagForm">
                <span id="tag-error" style="color: red;"></span>
                <div class="form-group">
                    <label for="recipeName">Recipe Tag:</label>
                    <input type="text" name="recipeTag" id="recipeTag"/>
                </div>
                <button onsubmit="addTag()" class="btn btn-primary page-button" id="addTagButton">Add Tag</button>
                <input type="button" value="Cancel" id="cancelAddTag"/>
            </form>
            <table id="TagsTable" class="table">
                <thead>
                <tr>
                    <th>Tag</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <form id="buttons">
            <button asp-action="goToRecipePage" class="btn btn-primary page-button" id="addRecipeButton">Add Recipe</button>
            <input type="submit" class="btn btn-primary page-button" asp-action="goToRecipePage" value="Cancel" id="cancelRecipe"/>
        </form>
    </div>
</div>


@{
    if (TempData["msg"] != null)
    {
        <script>
            alert('@TempData["msg"]')
        </script>
    }
}

<script>
    var cancelAddIngredient = document.getElementById('cancelAddIngredient');
    var addForm = document.getElementById('addForm');
    var showIngredientsForm = document.getElementById('showIngredientsForm');

    cancelAddIngredient.addEventListener("click", () => {
        addForm.style.display = "none";
        showIngredientsForm.style.display = "block";
    });

    var cancelAddTag = document.getElementById('cancelAddTag');
    var showTagsForm = document.getElementById('showTagsForm');
    var tagForm = document.getElementById('addTagForm');

    cancelAddTag.addEventListener("click", () => {
        tagForm.style.display = "none";
        showTagsForm.style.display = "block";
    });

    showTagsForm.addEventListener("click", () => {
        tagForm.style.display = "block";
        showTagsForm.style.display = "none";
    });

    var cancelAddStep = document.getElementById('cancelAddStep');
    var showStepForm = document.getElementById('showStepForm');
    var stepForm = document.getElementById('addStepForm');

    cancelAddStep.addEventListener("click", () => {
        stepForm.style.display = "none";
        showStepForm.style.display = "block";
    });

    showStepForm.addEventListener("click", () => {
        stepForm.style.display = "block";
        showStepForm.style.display = "none";
    });

    var addForm = document.getElementById("addForm");
    addForm.style.display = "none";
    var stepForm = document.getElementById("addStepForm");
    stepForm.style.display = "none";
    var tagForm = document.getElementById("addTagForm");
    tagForm.style.display = "none";
    var showIngredientsForm = document.getElementById('showIngredientsForm');
    showIngredientsForm.addEventListener("click", () => {
        addForm.style.display = "block";
        showIngredientsForm.style.display = "none";
    });
    var showTagsForm = document.getElementById('showTagsForm');
    showTagsForm.addEventListener("click", () => {
        tagForm.style.display = "block";
        showTagsForm.style.display = "none";
    });
    var showStepForm = document.getElementById('showStepForm');
    showStepForm.addEventListener("click", () => {
        stepForm.style.display = "block";
        showStepForm.style.display = "none";
    });

    var addIngredientButton = document.getElementById('addIngredientButton');
    var addStepButton = document.getElementById("addStepButton");

    document.getElementById('addForm').addEventListener('submit', function (event) {

        event.preventDefault();

        addIngredient();

        document.getElementById('txtIngredientName').value = '';
        document.getElementById('txtQuantity').value = '';
        document.getElementById('measurement').selectedIndex = 0;
    });

    document.getElementById('addTagForm').addEventListener('submit', function (event) {

        event.preventDefault();

        addTag();

        document.getElementById('recipeTag').value = '';
    });

    document.getElementById('addStepForm').addEventListener('submit', function (event) {

        event.preventDefault();

        addStep();

        document.getElementById('recipeStep').value = '';
    });

 function addStep() {

        var row = document.createElement('tr');
        var stepValue = document.getElementById("recipeStep").value;
        var errorLabel = document.getElementById('step-error');
        errorLabel.textContent = "";
        if (stepValue === '') {
            errorLabel.textContent = "Please enter a step";
            return;
        }

        var nameCell = document.createElement('td');
        nameCell.innerText = stepValue;
        row.appendChild(nameCell);

        var actionsCell = document.createElement('td');

        var moveUpButton = document.createElement('button');
        moveUpButton.innerText = '\u2191';
        moveUpButton.classList.add("btn", "btn-primary", "page-button", "move-button");
        moveUpButton.onclick = function () {
            var previousRow = row.previousElementSibling;
            if (previousRow) {
                row.parentNode.insertBefore(row, previousRow);
            }
        };
        actionsCell.appendChild(moveUpButton);

        var moveDownButton = document.createElement('button');
        moveDownButton.innerText = '\u2193';
        moveDownButton.classList.add("btn", "btn-primary", "page-button", "move-button");
        moveDownButton.style.marginRight = "200px";
        moveDownButton.onclick = function () {
            var nextRow = row.nextElementSibling;
            if (nextRow) {
                row.parentNode.insertBefore(row, nextRow.nextSibling);
            }
        };
        actionsCell.appendChild(moveDownButton);
        var deleteButton = document.createElement('button');
        deleteButton.innerText = 'Delete';
        deleteButton.classList.add("btn", "btn-primary", "page-button");
        deleteButton.onclick = function () {
            row.remove();
        };
        actionsCell.appendChild(deleteButton);

        row.appendChild(actionsCell);
        showStepForm.style.display = "block";

        var table = document.getElementById('StepsTable').getElementsByTagName('tbody')[0];
        table.appendChild(row);
}
    const addButton = document.getElementById('addRecipeButton');
    addButton.addEventListener('click', function (event) {
        var errorLabel = document.getElementById('recipe-error');

        addRecipe(event);
    });

    function addRecipe(event) {
        const ingredientsTable = document.getElementById('IngredientsTable');
        const ingredientsTbody = ingredientsTable.getElementsByTagName('tbody')[0];
        const ingredientsRows = ingredientsTbody.getElementsByTagName('tr');

        const stepsTable = document.getElementById('StepsTable');
        const stepsTbody = stepsTable.getElementsByTagName('tbody')[0];
        const stepsRows = stepsTbody.getElementsByTagName('tr');
        const tagsTable = document.getElementById('TagsTable');
        const tagsTbody = tagsTable.getElementsByTagName('tbody')[0];
        const tagsRows = tagsTbody.getElementsByTagName('tr');

        var tagsString = "";
        var errorLabel = document.getElementById('recipe-error');
        var stepsString = "";
        var ingredientsString = "";
        errorLabel.textContent = 'clicked';
        const recipeNameInput = document.getElementById('recipeName');
        const recipeDescriptionInput = document.getElementById('description');

        const recipeName = recipeNameInput.value;
        if(recipeName === ''){
            errorLabel.textContent = 'Please enter a Recipe Name';
            }
        if(recipeDescriptionInput === ''){
            errorLabel.textContent = 'Please enter a Description';
            }
        
        var exists = false;
        $.ajax({
            url: "@Url.Action("CheckRecipeExists", "Home")",
            method: 'POST',
            data: { recipeName: recipeName },
            success: function (response) {
                exists = response.Exists;
                console.log('Recipe exists:', exists);
            },
            error: function (xhr, status, error) {
                console.log('Error checking recipe:', error);
            }
        });

        const recipeDescription = recipeDescriptionInput.value;

        if (ingredientsRows.length > 0 && tagsRows.length > 0 && stepsRows.length > 0 && recipeName != null && recipeDescription != null) {
            if(!exists) {
            for (let i = 0; i < ingredientsRows.length; i++) {
                const cells = ingredientsRows[i].getElementsByTagName('td');
                var ingredientString = `${cells[0].textContent},${cells[1].textContent},${cells[2].textContent}`;
                if (i > 0) {
                    ingredientsString += `:${ingredientString}`;
                } else {
                    ingredientsString = ingredientString;
                }
            }
            for (let i = 0; i < stepsRows.length; i++) {
                const cells = stepsRows[i].getElementsByTagName('td');
                var stepString = `${i + 1},${cells[0].textContent}`;
                if (i > 0) {
                    stepsString += `:${stepString}`;
                } else {
                    stepsString = stepString;
                }
            }
            for (let i = 0; i < tagsRows.length; i++) {
                const cells = tagsRows[i].getElementsByTagName('td');
                var tagString = `${cells[0].textContent}`;
                if (i > 0) {
                    tagsString += `:${tagString}`;
                } else {
                    tagsString = tagString;
                }
            }
            console.log(recipeName);
            console.log(recipeDescription);
            console.log('here');
            $.ajax({
                url: "@Url.Action("AddRecipe", "Home")",
                method: 'POST',
                data: { recipeName: recipeName, description: recipeDescription, steps: stepsString, ingredients: ingredientsString, tags: tagsString },
                success: function (response) {
                    console.log('Recipe added successfully!');
                },
                error: function (xhr, status, error) {
                    console.log('Error adding recipe:', error);
                }
            });
            }
            else {
                event.preventDefault();
                errorLabel.textContent = 'Recipe with this name already exists';
                }
        } else {
            event.preventDefault();
            errorLabel.textContent = 'ALL FIELDS MUST HAVE VALUES!';
        }
    }

    function addTag() {
        var tag = document.getElementById('recipeTag').value.trim();
        var errorLabel = document.getElementById('tag-error');
        var recipeTagInput = document.getElementById("recipeTag");
        recipeTagInput.value = "";
        errorLabel.textContent = "";
        if (tag === '') {
            errorLabel.textContent = "Please enter a tag";
            return;
        }

        var table = document.getElementById('TagsTable');
        var tags = table.querySelectorAll('tbody tr td:first-child');

        for (var i = 0; i < tags.length; i++) {
            if (tags[i].innerText.toLowerCase() === tag.toLowerCase()) {
                document.getElementById('tag-error').innerText = 'Tag already exists.';
                return;
            }
        }

        var row = document.createElement('tr');

        var tagCell = document.createElement('td');
        tagCell.innerText = tag;
        row.appendChild(tagCell);

        var actionsCell = document.createElement('td');

        var deleteButton = document.createElement('button');
        deleteButton.innerText = 'Delete';
        deleteButton.classList.add("btn", "btn-primary", "page-button");
        deleteButton.onclick = function () {
            row.remove();
        };

        actionsCell.appendChild(deleteButton);
        row.appendChild(actionsCell);

        table.getElementsByTagName('tbody')[0].appendChild(row);
        showTagForm.style.display = "block";
        document.getElementById('tag-error').innerText = '';
        var tagForm = document.getElementById("addTagForm");
        tagForm.style.display = "none";
        
    }


    function addIngredient() {
        var name = document.getElementById('txtIngredientName').value;
        var quantity = document.getElementById('txtQuantity').value;
        var measurement = document.getElementById('measurement').value;
        var nameError = document.getElementById('ingredient-error');
        var errorLabel = document.getElementById('ingredient-error');
        if (name === '') {
            errorLabel.textContent = 'Please enter a Name';
            return;
        }
        if (quantity === '') {
            errorLabel.textContent = 'Please enter a Quantity';
            return;
        }
        if (!errorLabel) {
            errorLabel = document.createElement('span');
            errorLabel.id = 'quantity-error';
            errorLabel.style.color = 'red';
            var quantityInput = document.getElementById('txtQuantity');
            quantityInput.parentNode.insertBefore(errorLabel, quantityInput.nextSibling);
        }
        errorLabel.textContent = '';
        if (isNaN(quantity)) {
            errorLabel.textContent = 'Quantity must be an integer';
            return;
            var errorLabel = document.getElementById('quantity-error');
            if (!errorLabel) {
                errorLabel = document.createElement('span');
                errorLabel.id = 'quantity-error';
                errorLabel.style.color = 'red';
                var quantityInput = document.getElementById('txtQuantity');
                quantityInput.parentNode.insertBefore(errorLabel, quantityInput.nextSibling);
            }
            errorLabel.textContent = 'Quantity must be an integer.';
            return;
        }

        var table = document.getElementById('IngredientsTable');
        var rows = table.querySelectorAll('tbody tr');
        var foundRow = null;

        for (var i = 0; i < rows.length; i++) {
            if (rows[i].cells[0].innerText.toLowerCase() === name.toLowerCase()) {
                foundRow = rows[i];
                break;
            }
        }

        if (foundRow) {
            var existingQuantity = parseInt(foundRow.cells[1].innerText);
            foundRow.cells[1].innerText = existingQuantity + parseInt(quantity);
        } else {
            var row = document.createElement('tr');

            var nameCell = document.createElement('td');
            nameCell.innerText = name;
            row.appendChild(nameCell);

            var quantityCell = document.createElement('td');
            quantityCell.innerText = quantity;
            row.appendChild(quantityCell);

            var measurementCell = document.createElement('td');
            measurementCell.innerText = measurement;
            row.appendChild(measurementCell);

            var actionsCell = document.createElement('td');
            var deleteButton = document.createElement('button');
            deleteButton.classList.add("btn", "btn-primary", "page-button");
            deleteButton.innerText = 'Delete';
            deleteButton.onclick = function () {
                row.remove();
            };
            actionsCell.appendChild(deleteButton);
            row.appendChild(actionsCell);

            table.getElementsByTagName('tbody')[0].appendChild(row);
        }

        document.getElementById('txtIngredientName').value = '';
        showAddForm.style.display = "block";
        document.getElementById('txtQuantity').value = '';
        var addForm = document.getElementById("addForm");
        addForm.style.display = "none";
    }






</script>