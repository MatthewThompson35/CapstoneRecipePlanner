<style>
    #addForm, #addStepForm {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);
        display: block;
        margin: 30px auto;
        max-width: 600px;
        padding: 20px;
    }

    #addForm input[type="text"],
    #addStepForm input[type="text"],
    #addStepForm select,
    #addForm select {
        border: 1px solid #e6e6e6;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 18px;
        margin-bottom: 10px;
        padding: 10px;
        width: 100%;
    }

    #addForm input[type="submit"],
    #addStepForm input[type="submit"],
    #addStepForm input[type="button"],
    #addForm input[type="button"] {
        background-color: #33b5e5;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }

    #addForm #cancelButton,
    #addStepForm #cancelButton {
        background-color: #d9534f;
        color: #fff;
        margin-left: 10px;
    }

    #addForm label,
    #addStepForm label {
        display: block;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    #addForm .form-group,
    #addStepFrom .form-group { margin-bottom: 15px; }

    #addForm .button-group,
    #addStepForm .button-group {
        margin-top: 20px;
        text-align: right;
    }

    #addRecipe {
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);
        display: block;
        margin: 30px auto;
        max-width: 1200px;
        padding: 20px;
    }

    #addRecipe input[type="text"],
    #addRecipe select {
        border: 1px solid #e6e6e6;
        border-radius: 5px;
        box-sizing: border-box;
        font-size: 18px;
        margin-bottom: 10px;
        padding: 10px;
        width: 100%;
    }

    #addRecipe input[type="submit"],
    #addRecipe input[type="button"] {
        background-color: #33b5e5;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        font-size: 16px;
        margin-right: 10px;
        padding: 5px 10px;
    }

    #addRecipe #cancelButton {
        background-color: #d9534f;
        color: #fff;
        margin-left: 10px;
    }

    #addRecipe label {
        display: block;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    #addRecipe .form-group { margin-bottom: 15px; }

    #addRecipe .button-group {
        margin-top: 20px;
        text-align: right;
    }

    .form-container label.error { font-size: 14px; }

</style>

<div class="row">
    <div class="col-md-12">
        <form id="addRecipe">
            <div class="form-group">
                <label for="recipeName">Recipe Name:</label>
                <input type="text" name="recipeName" id="recipeName"/>
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <input type="text" name="description" id="description"/>
            </div>
            <div class="form-group">
                <h1>Ingredients</h1>
                <table id="IngredientsTable" class="table">
                    <thead>
                    <tr>
                        <th>Ingredient Name</th>
                        <th>Quantity</th>
                        <th>Measurement</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody>

                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <h1>Steps</h1>
                <table id="StepsTable" class="table">
                    <thead>
                    <tr>
                        <th>Step</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody>

                    </tbody>
                </table>
            </div>
        </form>
        <h4>Please add all ingredients and steps in order</h4>
    </div>
    <h2>Ingredients</h2>
    <div class="col-md-6">
        <form id="addForm">
            <div class="form-group">
                <label for="txtIngredientName">Ingredient Name:</label>
                <input type="text" name="txtIngredientName" id="txtIngredientName"/>
            </div>
            <div class="form-group">
                <label for="txtQuantity">Quantity:</label>
                <span id="quantity-error" style="color: red;"></span>
                <input type="text" name="txtQuantity" id="txtQuantity"/>
            </div>
            <div class="form-group">
                <label for="measurement">Measurement:</label>
                <select name="Measurement" id="measurement">
                    @foreach (var measurement in ViewBag.measurements)
                    {
                        <option value="@measurement">@measurement</option>
                    }
                </select>
                @if (ViewBag.Error != null)
                {
                    <label class="error" style="color: red">@ViewBag.Error</label>
                }
            </div>
            <div class="button-group">
                <button onsubmit="addIngredient()" class="btn btn-primary page-button" id="addIngredientButton">Add Ingredient</button>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <h2>Steps</h2>
        <form id="addStepForm">
            <div class="form-group">
                <label for="recipeName">Recipe Step:</label>
                <input type="text" name="recipeStep" id="recipeStep"/>
            </div>
            <button onsubmit="addStep()" class="btn btn-primary page-button" id="addStepButton">Add Step</button>
        </form>
    </div>
    <form id="buttons">
        <button onclick="addRecipe()" class="btn btn-primary page-button" id="addRecipeButton">Add Recipe</button>
        <input type="submit" class="btn btn-primary page-button" asp-action="goToRecipePage" value="Cancel" id="cancelRecipe"/>
    </form>
</div>


@{
    if (TempData["msg"] != null)
    {
        <script>
            alert('@TempData["msg"]')
        </script>
    }
}

<script>
 var addIngredientButton = document.getElementById('addIngredientButton');
 var addStepButton = document.getElementById("addStepButton");
 
 
 document.getElementById('addForm').addEventListener('submit', function(event) {

        event.preventDefault();


        addIngredient();

        document.getElementById('txtIngredientName').value = '';
        document.getElementById('txtQuantity').value = '';
        document.getElementById('measurement').selectedIndex = 0;
    });
    
 document.getElementById('addStepForm').addEventListener('submit', function(event) {

        event.preventDefault();


        addStep();

        document.getElementById('recipeStep').value = '';
    });

 function addStep() {

      var row = document.createElement('tr');
      var stepValue = document.getElementById("recipeStep").value;

      var nameCell = document.createElement('td');
      nameCell.innerText = stepValue;
      row.appendChild(nameCell);

      var actionsCell = document.createElement('td');
      var deleteButton = document.createElement('button');
      deleteButton.innerText = 'Delete';
      deleteButton.onclick = function() {
        row.remove();
      };
      actionsCell.appendChild(deleteButton);
      row.appendChild(actionsCell);

      var table = document.getElementById('StepsTable').getElementsByTagName('tbody')[0];
  table.appendChild(row);

}

    function addRecipe() {
        const ingredientsTable = document.getElementById('IngredientsTable');
        const ingredientsTbody = ingredientsTable.getElementsByTagName('tbody')[0];
        const ingredientsRows = ingredientsTbody.getElementsByTagName('tr');

        const stepsTable = document.getElementById('StepsTable');
        const stepsTbody = stepsTable.getElementsByTagName('tbody')[0];
        const stepsRows = stepsTbody.getElementsByTagName('tr');
        var errorLabel = document.getElementById('quantity-error');
        var stepsString = ""
        var ingredientsString = ""
        errorLabel.textContent = 'clicked';
        var step = 1;
        var ingredient = 1;
        if (ingredientsRows.length > 0 && stepsRows.length > 0) {
            for (let i = 0; i < ingredientsRows.length; i++) {
                const cells = ingredientsRows[i].getElementsByTagName('td');
                const ingredientString = `${cells[0].textContent},${cells[1].textContent},${cells[2].textContent}`;
                if (i > 0) {
                    ingredientsString += `:${ingredientString}`;
                } else {
                    ingredientsString = ingredientString;
                }
            }
            for (let i = 0; i < stepsRows.length; i++) {
                const cells = stepsRows[i].getElementsByTagName('td');
                const stepString = `${i + 1},${cells[0].textContent}`;
                if (i > 0) {
                    stepsString += `:${stepString}`;
                } else {
                    stepsString = stepString;
                }
            }
            $.ajax({
                url: "@Url.Action("AddRecipe", "Home")",
                method: 'POST',
                data: { steps: stepsString, ingredients: ingredientsString },
                success: function (response) {
                    console.log('Recipe added successfully!');
                    // Display success message or redirect to another page
                },
                error: function (xhr, status, error) {
                    console.log('Error adding recipe:', error);
                    // Display error message or take other action
                }
            });
        } else {
            errorLabel.textContent = 'Both tables must have values!';
            return;
        }
    }


function addIngredient() {
  var name = document.getElementById('txtIngredientName').value;
  var quantity = document.getElementById('txtQuantity').value;
  var measurement = document.getElementById('measurement').value;
  
  var errorLabel = document.getElementById('quantity-error');
            if (!errorLabel) {
              errorLabel = document.createElement('span');
              errorLabel.id = 'quantity-error';
              errorLabel.style.color = 'red';
              var quantityInput = document.getElementById('txtQuantity');
              quantityInput.parentNode.insertBefore(errorLabel, quantityInput.nextSibling);
            }
            errorLabel.textContent = '';
        if (isNaN(quantity)) {
            var errorLabel = document.getElementById('quantity-error');
            if (!errorLabel) {
              errorLabel = document.createElement('span');
              errorLabel.id = 'quantity-error';
              errorLabel.style.color = 'red';
              var quantityInput = document.getElementById('txtQuantity');
              quantityInput.parentNode.insertBefore(errorLabel, quantityInput.nextSibling);
            }
            errorLabel.textContent = 'Quantity must be an integer.';
            return; 
            }


  var row = document.createElement('tr');


  var nameCell = document.createElement('td');
  nameCell.innerText = name;
  row.appendChild(nameCell);

  var quantityCell = document.createElement('td');
  quantityCell.innerText = quantity;
  row.appendChild(quantityCell);

  var measurementCell = document.createElement('td');
  measurementCell.innerText = measurement;
  row.appendChild(measurementCell);


  var actionsCell = document.createElement('td');
  var deleteButton = document.createElement('button');
  deleteButton.innerText = 'Delete';
  deleteButton.onclick = function() {
    row.remove();
  };
  actionsCell.appendChild(deleteButton);
  row.appendChild(actionsCell);


  var table = document.getElementById('IngredientsTable').getElementsByTagName('tbody')[0];
  table.appendChild(row);

  document.getElementById('txtIngredientName').value = '';
  document.getElementById('txtQuantity').value = '';

}



</script>