@model List<RecipePlannerLibrary.Models.Recipe>

@{
    ViewBag.Title = "SharedRecipes";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>@ViewBag.Title</title>

    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            width: 100%;
        }

        th { 
            background-color: #f2f2f2; 
        }

        tr:nth-child(even) { 
            background-color: #f2f2f2; 
        }

        tr:hover { 
            background-color: grey; 
        }

        #logout {
            background-color: #d9534f;
            color: #fff;
            position: fixed;
            right: 10px;
            top: 5px;
        }

        body {
            background-color: #f2f2f2;
            color: #333;
            font-family: 'Open Sans', sans-serif;
        }

        h1, h2, h3 {
            font-weight: bold;
            margin: 0 0 20px;
        }

        a {
            color: #666;
            text-decoration: none;
        }

        #recipe-container {
            display: flex;
            margin: 50px auto;
            max-width: 1200px;
        }

        .pagination { 
            margin-top: 20px; 
        }

        #recipe-list {
            background-color: #fff;
            border: 1px solid black;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            flex: 1;
            padding: 20px;
            width: 100%;
        }

        #recipe-details-box {
            background-color: #fff;
            border: 1px solid black;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex: 1;
            margin-left: 50px;
            max-width: 600px;
            overflow: hidden;
            overflow-y: auto;
            padding: 20px;
            width: 50%;
        }

        .form-group {
            align-items: left;
            display: flex;
            flex-direction: column;
            justify-content: left;
            margin-top: 20px;
        }

        .form-group label {
            font-size: 16px;
            margin-right: 10px;
        }

        .form-group select {
            font-size: 16px;
            margin-right: 10px;
            padding: 5px;
        }

        #errorMessage {
            color: #ff0000;
            font-size: 14px;
            margin-top: 10px;
            text-align: center;
        }

        .button-group {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        input[type="submit"] {
            border: none;
            color: white;
            cursor: pointer;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
        }
    </style>

</head>
<body>
<div id="recipe-container">
    <button onclick="location.href='@Url.Action("Index")'" id="logout">Logout</button>
    <div id="recipe-list">
        <h2><center>Shared Recipes</center></h2>
        <table id="all-recipes">
            <thead>
            <tr>
                <th>Name</th>
                <th>Shared By</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var recipe in ViewBag.AllSharedRecipesOnPage)
            {
                <tr onclick="showRecipe('@recipe.Recipe.RecipeId')">
                    <td>@recipe.Recipe.Name</td>
                    <td>@recipe.SenderUsername</td>
                </tr>
            }
            </tbody>
        </table>

        <div class="pagination" id="available-pagination">
            @if (ViewBag.currentAllPage > 1)
            {
                    <a href="@Url.Action("goToSharedRecipePageAll", new {page = ViewBag.currentAllPage - 1})" class="btn btn-primary page-button">Previous Page</a>
            }
            @for (var i = 1; i <= ViewBag.totalAllPages; i++)
            {
                    <a href="@Url.Action("goToSharedRecipePageAll", new {page = i})" class="btn btn-primary page-button">@i</a>
            }
            @if (ViewBag.currentAllPage < ViewBag.totalAllPages)
            {
                    <a href="@Url.Action("goToSharedRecipePageAll", new {page = ViewBag.currentAllPage + 1})" class="btn btn-primary page-button">Next Page</a>
            }

        </div>
    </div>
    <div id="recipe-details-box" style="display: flex; flex-direction: column; height: 1000px; overflow: auto;">
        <div id="addForm">
            <form method="post" id="addPlannedMeal" style="display: none;">
                <div class="form-group">
                    <input type="hidden" name="recipeId" id="recipeId" value="">
                    <label for="week">Week:</label>
                    <select name="week" id="week">
                        @foreach (var week in new[] {"This Week", "Next Week"})
                        {
                            <option value="@week">@week</option>
                        }
                    </select>
                    <label for="day">Day:</label>
                    <select name="day" id="day">
                        @foreach (var day in new[] {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"})
                        {
                            <option value="@day">@day</option>
                        }
                    </select>
                    <label for="type">Meal Type:</label>
                    <select name="type" id="type">
                        @foreach (var type in new[] {"Breakfast", "Lunch", "Dinner"})
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                    <div id="errorMessage" style="display: none;">
                        Are you sure You want to overwrite your previous meal?
                    </div>

                </div>
                <div class="button-group">
                    <input type="submit" class="btn btn-primary page-button" asp-action="addPlannedMeal" value="Add"/>
                    <input type="submit" class="btn btn-primary page-button" hidden asp-action="UpdateThisWeeksMeal" value="Confirm Update"/>
                </div>
            </form>
        </div>
        <div id="details">
            <form id="cookMeal" method="POST">
                <input type="hidden" id="recipeID" name="recipeID" value="">
                <input type="submit" class="btn btn-primary page-button" asp-action="CookMeal" value="Cook Meal" id="CookRecipe" style="display: none;"/>
            </form>
            @foreach (var recipe in ViewBag.AllRecipes)
            {
                <div id="@recipe.Recipe.RecipeId" style="display: none">
                    <h3 class="recipe-name">@recipe.Recipe.Name</h3>
                    <p class="recipe-description">@recipe.Recipe.Description</p>
                    <h4>Steps</h4>
                    <ol class="recipe-steps">
                        @foreach (var step in recipe.Recipe.Steps)
                        {
                            <li>@step.stepDescription</li>
                        }
                    </ol>
                    <h4>Ingredients</h4>
                    <ul class="recipe-ingredients">
                        @foreach (var ingredient in recipe.Recipe.Ingredients)
                        {
                            <li>@ingredient.Quantity@ingredient.Measurement @ingredient.IngredientName</li>
                        }
                    </ul>
                    @if (recipe.Recipe.Tags != null && recipe.Recipe.Tags.Count > 0)
                    {
                        <h4>Tags</h4>
                        <ul class="recipe-tags">
                            @foreach (var tag in recipe.Recipe.Tags)
                            {
                                <li>@tag</li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>
    </div>
</div>
</body>

<script>
    function showRecipe(recipeId) {
        var recipeID = document.getElementById('recipeID')
        var cookRecipe = document.getElementById('CookRecipe');
        var recipeDiv = document.getElementById(recipeId);
        var currentDiv = document.querySelector('#details > div[style*="display: block"]');
        var addPlannedMealForm = document.getElementById('addPlannedMeal');
        var recipeIdInput = addPlannedMealForm.querySelector('input[name="recipeId"]');

        recipeIdInput.value = recipeId;
        recipeID.value = recipeId;

        if (currentDiv) {
            currentDiv.style.display = 'none';
        }

        recipeDiv.style.display = 'block';
        addPlannedMealForm.style.display = 'block';
        cookRecipe.style.display = "block";
    }
    
    function displayPage(recipes, pageNumber) {
        const startIndex = (pageNumber - 1) * 10;
        const endIndex = startIndex + 10;
        const itemsToShow = recipes.slice(startIndex, endIndex);
        var table = document.getElementById("filtered-recipes").getElementsByTagName("tbody")[0];
        table.innerHTML = "";

        if (recipes.length == 0) {
            var row = table.insertRow();
            var cell = row.insertCell();
            cell.colSpan = "2";
            cell.style.textAlign = "center";
            cell.innerHTML = "No recipes found with the entered tags.";
        }

        for (var i = 0; i < itemsToShow.length; i++) {
            var row = table.insertRow();
            var nameCell = row.insertCell();
            nameCell.innerHTML = itemsToShow[i].name;
            var tagsCell = row.insertCell();
            tagsCell.innerHTML = itemsToShow[i].tags.join(", ");
            row.setAttribute("onclick", "showRecipe('" + itemsToShow[i].recipeId + "')");
            row.style.cursor = "pointer";
        }
        updatePaginationButtons(recipes, pageNumber);
    }

    function updatePaginationButtons(recipeList, currentPage) {
        const paginationContainer = document.querySelector('#filter-pagination');
        paginationContainer.innerHTML = "";
        document.getElementById('filter-pagination').style.display = 'block';

        const previousButton = document.createElement('button');
        previousButton.textContent = 'Previous';
        previousButton.disabled = currentPage === 1;
        previousButton.addEventListener('click', () => displayPage(recipeList, currentPage - 1));
        previousButton.classList.add('btn', 'btn-primary', 'page-button');
        previousButton.style.margin = '5px';
        paginationContainer.appendChild(previousButton);

        const totalPages = Math.ceil(recipeList.length / 10);
        for (let i = 1; i <= totalPages; i++) {
            const pageNumberButton = document.createElement('button');
            pageNumberButton.textContent = i;
            pageNumberButton.disabled = i === currentPage;
            pageNumberButton.addEventListener('click', () => displayPage(recipeList, i));
            pageNumberButton.classList.add('btn', 'btn-primary', 'page-button');
            pageNumberButton.style.margin = '5px';
            paginationContainer.appendChild(pageNumberButton);
        }

        const nextButton = document.createElement('button');
        nextButton.textContent = 'Next';
        nextButton.disabled = currentPage === totalPages;
        nextButton.addEventListener('click', () => displayPage(recipeList, currentPage + 1));
        nextButton.classList.add('btn', 'btn-primary', 'page-button');
        nextButton.style.margin = '5px';
        paginationContainer.appendChild(nextButton);
    }
</script>