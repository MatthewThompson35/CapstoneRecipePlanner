@{
    ViewBag.Title = "Meal Plan";
    var mealTypes = new List<string> { "Breakfast", "Lunch", "Dinner" };
}
<div>
    <h2>@ViewBag.Header</h2>
    <form method="post" action="@Url.Action("ToggleWeek", "Home", new { currentWeek = ViewBag.CurrentWeek })">
        <button>Switch Weeks</button>
    </form>
    
    <form id="addForm" method="post" action="@Url.Action("addNeededPlannedMealIngredients", "Home")">

        <button id="submitButton">Add Ingredients For Remaining Meals</button>
        <label for="AllIngredients">Add all Ingredients</label>
        <input type="checkbox" id="AllIngredients" name="ingredientType" value="All">
        @if (ViewBag.error != null)
        {
            <div class="alert alert-danger">@ViewBag.error</div>
        }
    </form>

</div>
<div class="row">
    
    <div class="col-md-6" id="meal-table">
        <table>
            @{ string[] days = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"}; }

            @for (int i = 0; i < days.Length; i++)
            {
                <tr class="day-row" data-day="@days[i]">
                    <td style="background-color: #33b5e5;;" colspan="4">@days[i]</td>
                </tr>
                <tr class="details-row hidden" data-day="@days[i]">
                    <td>Breakfast</td>
                    <td id="@($"{days[i]}BreakfastDetails")">@ViewBag.DefaultValues[i]</td>
                    <td><button id="@($"{days[i]}BreakfastButton")" onclick="showRecipeDetails('@days[i]', 'Breakfast')">View Recipe</button></td>
                    <td><button onclick="removeColumn('@days[i]', 'Breakfast')">Remove</button></td>
                </tr>
                <tr class="details-row hidden" data-day="@days[i]">
                    <td>Lunch</td>
                    <td id="@($"{days[i]}LunchDetails")">@ViewBag.Lunch[i]</td>
                    <td><button id="@($"{days[i]}LunchButton")" onclick="showRecipeDetails('@days[i]', 'Lunch')">View Recipe</button></td>
                    <td><button onclick="removeColumn('@days[i]', 'Lunch')">Remove</button></td>
                </tr>
                <tr class="details-row hidden" data-day="@days[i]">
                    <td>Dinner</td>
                    <td id="@($"{days[i]}DinnerDetails")">@ViewBag.Dinner[i]</td>
                    <td><button id="@($"{days[i]}DinnerButton")" onclick="showRecipeDetails('@days[i]', 'Dinner')">View Recipe</button></td>
                    <td><button onclick="removeColumn('@days[i]','Dinner')">Remove</button></td>
                </tr>
            }
        </table>
    </div>

    <div class="col-md-6" id="recipe-details">
        <div id="recipe-details-box" style="overflow: auto;">
            @foreach (var recipe in ViewBag.AllRecipes)
            {
                <div id="@recipe.RecipeId" style="display: none">
                    <h3 class="recipe-name">@recipe.Name</h3>
                    <p class="recipe-description">@recipe.Description</p>
                    <h4>Steps</h4>
                    <ol class="recipe-steps">
                        @foreach (var step in recipe.Steps)
                        {
                            <li>@step.stepDescription</li>
                        }
                    </ol>
                    <h4>Ingredients</h4>
                    <ul class="recipe-ingredients">
                        @foreach (var ingredient in recipe.Ingredients)
                        {
                            <li>@ingredient.Quantity @ingredient.Measurement @ingredient.IngredientName</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .alert {
        height: 30px;
        width: 600px;
        text-align: center; 
        display: flex;
        justify-content: center;
        align-items: center; 
    }
    .alert-danger {
        height: 30px;
        width: 600px;
    }
    #recipe-details {
        align-items: center;
        display: flex;
        flex: 1;
        margin-left: 50px;
    }

    #recipe-details-box {
        border: 1px solid black;
        height: 900px;
        padding: 10px;
        padding-top: 20px;
        top: 160px;
        position: fixed;
        width: 38%;
    }

    #recipe-details-box h3 {
        margin-top: 0;
    }

    #recipe-details-box p {
        margin: 0;
    }

    h2 {
        margin-top: 20px;
        text-align: center;
    }

    table {
        border-collapse: collapse;
        margin: 0 auto;
        margin-bottom: 20px;
        max-width: 800px;
        padding-bottom: 10px;
        table-layout: fixed;
        top: 200px;
        width: 100%;
    }

    th,
    td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
        width: 125px;
    }

    th {
        background-color: #f2f2f2;
        font-weight: bold;
    }

    select {
        border: none;
        border-radius: 4px;
        box-sizing: border-box;
        padding: 8px;
        width: 100%;
    }

    button {
        background-color: #4CAF50;
        border: none;
        border-radius: 4px;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        padding: 8px;
        text-align: center;
        text-decoration: none;
    }

    button[disabled] {
        cursor: not-allowed;
        opacity: 0.5;
    }

    td[id$="Details"] {
        border: 1px solid #ddd;
        border-top: none;
        padding: 16px;
    }

    .hidden {
        display: none;
    }
</style>
<script>
    window.onload = function () {
        doDefaultMeals();
    };

    var allIngredientsCheckbox = document.getElementById("AllIngredients");
    var addForm = document.getElementById("addForm");

    allIngredientsCheckbox.addEventListener("change", function () {
        if (allIngredientsCheckbox.checked) {
            addForm.action = "@Url.Action("addAllPlannedMealIngredients", "Home")";
        } else {
            addForm.action = "@Url.Action("addNeededPlannedMealIngredients", "Home")";
        }
    });
    
    
    const dayRows = document.querySelectorAll('.day-row');

    // Add click event listener to each day row
    dayRows.forEach(dayRow => {
        dayRow.addEventListener('click', () => {
            // Get the day for the clicked row
            const day = dayRow.dataset.day;

            // Get all details rows for the clicked day
            const detailsRows = document.querySelectorAll(`.details-row[data-day="${day}"]`);

            // Toggle the "hidden" class for each details row
            detailsRows.forEach(detailsRow => {
                detailsRow.classList.toggle('hidden');
            });
        });
    });
    
    function toggleWeek() {
        if ("@ViewBag.CurrentWeek" === "Next Week") {
            var url = "@Url.Action("goToPlannedMealsPageNextWeek", "Home")";
        } else {
            var url = "@Url.Action("goToPlannedMealsPage", "Home")";
        }
        $.ajax({
          url: url,
          method: "POST",
          success: function(response) {

          }
        });
    }
    
    function removeColumn(day, mealType){
        var dayDetails = day + mealType + "Details";
        var detailsElement = document.getElementById(dayDetails);
        var week = "@ViewBag.CurrentWeek"

        $.ajax({
            type: "GET",
            url: "@Url.Action("RemoveThisWeeksMeal", "Home")",
            data: { day: day, mealType: mealType, week: week },
            success: function (response) {
                console.log(response);
                var recipeName = response.recipeName;
                detailsElement.innerHTML = recipeName;
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
            }
        });
        }

    function showRecipeDetails(day, mealType) {
        var week = "@ViewBag.CurrentWeek"

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetRecipeName", "Home")",
            data: { day: day, mealType: mealType, week: week },
            success: function (response) {
                console.log(response);
                var recipeId = response.recipeId;
                showRecipe(recipeId);
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
            }
        });
    }





    function showRecipe(recipeId) {
        var recipeDetails = document.getElementById("recipe-details-box");
        var allRecipes = recipeDetails.children;
        for (var i = 0; i < allRecipes.length; i++) {
            allRecipes[i].style.display = "none";
        }

        // Show the recipe details for the specified recipe ID
        var recipe = document.getElementById(recipeId);
        recipe.style.display = "block";

        // Set the meal type in the corresponding details cell
        var detailsCell = document.getElementById(mealType + "Details");
        detailsCell.innerHTML = "Recipe " + recipeId;

    }


</script>